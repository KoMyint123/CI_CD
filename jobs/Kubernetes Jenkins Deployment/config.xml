<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1316.vd2290d3341a_f">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2144.v077a_d1928a_40"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2144.v077a_d1928a_40">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3731.ve4b_5b_857b_a_d3">
    <script>pipeline {

  environment {
    dockerimagename = &quot;mha99/myhello&quot;
    dockerImage = &quot;&quot;
  }

  agent any

  stages {

    stage(&apos;Checkout Source&apos;) {
      steps {
        git &apos;https://github.com/shazforiot/nodeapp_test.git&apos;
      }
    }

    stage(&apos;Build image&apos;) {
      steps{
        script {
          dockerImage = docker.build dockerimagename
        }
      }
    }

    stage(&apos;Pushing Image&apos;) {
      environment {
               registryCredential = &apos;dockerhublogin&apos;
           }
      steps{
        script {
          docker.withRegistry( &apos;https://registry.hub.docker.com&apos;, registryCredential ) {
            dockerImage.push(&quot;latest&quot;)
          }
        }
      }
    }

    stage(&apos;Deploying App to Kubernetes&apos;) {
      steps {
        script {
          kubernetesDeploy(configs: &quot;deploymentservice.yml&quot;, kubeconfigId: &quot;kubernetes&quot;)
        }
      }
    }

  }

}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>